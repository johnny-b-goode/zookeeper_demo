<?xml version="1.0" encoding="UTF-8"?>
<project name="Zookeeper Demo" default="build" basedir=".." xmlns:ivy="antlib:org.apache.ivy.ant">
	<!--The tstamp tag allows us to use the DSTAMP, TSTAMP, and TODAY properties
	later. These are the date stamp, time stamp, and the date in the format of
	four letter month, two digit day, and four digit year.-->
	<tstamp />
	<property name="src" value="${basedir}/src" />
	<property name="lib" value="${basedir}/lib" />
	<property name="bin" value="${basedir}/bin" />
	<property name="bld" value="${basedir}/bld" />
	<property name="doc" value="${basedir}/doc" />
	<property name="jar" value="${basedir}/jar" />
	<property name="info.txt" value="${basedir}/info.txt" />
	<property name="jarbasename" value="zookeeper_demo" />
	<property name="jarextension" value=".jar" />
	<!--ivy properties-->
	<property name="ivy.version" value="2.4.0" />
	<property name="ivy.lib" value="${lib}/ivy" />
	<!--sonar properties-->
	<property name="sonar-project.properties" value="${basedir}/sonar-project.properties" />
	<property name="sonar.projectKey" value="net.scientifichooliganism.zookeeper" />
	<property name="sonar.projectDescription" value="A very simple project demonstrating the use of Apache Zookeeper." />
	<property name="sonar.language" value="java" />
	<property name="sonar.sourceEncoding" value="UTF-8" />
	<property name="sonar.sources" value="src" />

	<condition property="is_ver_set" >
		<isset property="app_vrsn" />
	</condition>

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="ivy.classpath">
		<fileset dir="${ivy.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean_log">
		<delete file="${info.txt}" failonerror="false" verbose="true" />
	</target>

	<target name="clean_sonar">
		<delete file="${sonar-project.properties}" failonerror="false" verbose="true" />
	</target>

	<target name="vrsn_avail" if="is_ver_set" depends="clean_log">
		<echo message="Version Provided..." />
		<echo message="Application:        ${ant.project.name}${line.separator}" file="${info.txt}" />
		<echo message="Version:            ${app_vrsn}${line.separator}" file="${info.txt}" append="true" />
	</target>

	<target name="vrsn_unavail" unless="is_ver_set" depends="vrsn_avail">
		<echo message="Version Not Provided..." />
		<echo message="Application:        ${ant.project.name}${line.separator}" file="${info.txt}" />
		<echo message="Version:            Developer Build${line.separator}" file="${info.txt}" append="true" />
		<echo message="Built By:           ${user.name}${line.separator}" file="${info.txt}" append="true" />
	</target>

	<target name="log" depends="vrsn_unavail" description="">
		<echo message="Writing info.txt..." />
		<echo message="Build Date:         ${DSTAMP}${line.separator}" file="${info.txt}" append="true" />
		<echo message="--------------------------------------------------------------------------------${line.separator}" file="${info.txt}" append="true" />
		<echo message="Java Vendor:        ${java.vendor}${line.separator}" file="${info.txt}" append="true" />
		<echo message="Java Version:       ${ant.java.version}${line.separator}" file="${info.txt}" append="true" />
		<echo message="Ant Version:        ${ant.version}${line.separator}" file="${info.txt}" append="true" />
		<echo message="Ant Java Version:   ${ant.java.version}${line.separator}" file="${info.txt}" append="true" />
		<echo message="OS Name:            ${os.name}${line.separator}" file="${info.txt}" append="true" />
		<echo message="OS Version:         ${os.version}${line.separator}" file="${info.txt}" append="true" />
		<echo message="OS Arch:            ${os.arch}${line.separator}" file="${info.txt}" append="true" />
	</target>

	<target name="gen_sonar_properties" if="is_ver_set" depends="clean_sonar" description="">
		<echo message="Writing sonar-project.properties..." />
		<echo message="sonar.projectKey=${sonar.projectKey}${line.separator}" file="${sonar-project.properties}" append="true" />
		<echo message="sonar.projectName=${ant.project.name}${line.separator}" file="${sonar-project.properties}" append="true" />
		<echo message="sonar.projectDescription=${sonar.projectDescription}${line.separator}" file="${sonar-project.properties}" append="true" />
		<echo message="sonar.projectVersion=${app_vrsn}${line.separator}" file="${sonar-project.properties}" append="true" />
		<echo message="sonar.sources=${sonar.sources}${line.separator}" file="${sonar-project.properties}" append="true" />
		<echo message="sonar.tests=${sonar.tests}" file="${sonar-project.properties}" append="true" />
	</target>

	<target name="prep" description="">
		<delete dir="${bin}" failonerror="false" includeemptydirs="true" />
		<delete dir="${doc}" failonerror="false" includeemptydirs="true" />
		<delete dir="${jar}" failonerror="false" includeemptydirs="true" />
		<delete dir="${lib}" failonerror="false" includeemptydirs="true" />
		<mkdir dir="${bin}" />
		<mkdir dir="${doc}" />
		<mkdir dir="${jar}" />
		<mkdir dir="${lib}" />
	</target>

	<target name="ivy.prep" description="">
		<delete dir="${ivy.lib}" failonerror="false" includeemptydirs="true" />
		<mkdir dir="${ivy.lib}" />
	</target>

	<target name="ivy.download" depends="ivy.prep" description="">
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${ivy.lib}" usetimestamp="true" verbose="true" maxtime="60" retries="1" />
	</target>

	<target name="ivy.define">
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath" />
	</target>

	<target name="ivy.update_libs" depends="ivy.define" description="">
		<ivy:settings id="settings" file="${bld}/ivysettings.xml" />
		<ivy:resolve file="${bld}/ivy.xml" settingsRef="settings" conf="*" transitive="true" />
		<ivy:report todir="${doc}/ivy_report" graph="false" />
		<ivy:retrieve pattern="${lib}/[conf]/[artifact]-[revision].[ext]" sync="true" />
	</target>

	<target name="ivy.clean_cache" depends="ivy.define" description="">
		<ivy:cleancache />
	</target>

	<target name="clean_ivy" depends="ivy.clean_cache" description="">
		<delete dir="${ivy.lib}" />
	</target>

	<target name="clean_bin">
		<delete includeemptydirs="true" verbose="true" >
			<fileset dir="${bin}" includes="**/*" />
		</delete>
	</target>

	<target name="clean_jar">
		<delete includeemptydirs="true" verbose="true" >
			<fileset dir="${jar}" includes="**/*" />
		</delete>
	</target>

	<target name="clean" depends="clean_log,clean_ivy,clean_sonar,clean_bin,clean_jar" description=""/>

	<target name="compile" depends="clean_bin,log" description="">
		<javac srcdir="${src}" includeantruntime="false" destdir="${bin}" includes="**/*.java">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="debug" depends="clean_bin" description="">
		<javac srcdir="${src}" includeantruntime="false" destdir="${bin}" debug="on" debuglevel="lines,vars,source" includes="**/*.java">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="releasejar" if="is_ver_set" depends="clean_jar">
		<jar destfile="${jar}/${jarbasename}-${app_vrsn}${jarextension}" whenmanifestonly="fail">
			<fileset dir="${bin}" includes="**/*.class" />
			<fileset dir="${basedir}" includes="info.txt" />
		</jar>
	</target>

	<target name="jar" unless="is_ver_set" depends="releasejar" description="">
		<jar destfile="${jar}/${jarbasename}${jarextension}" whenmanifestonly="fail">
			<fileset dir="${bin}" includes="**/*.class" />
			<fileset dir="${basedir}" includes="info.txt" />
		</jar>
	</target>

	<target name="build" depends="ivy.update_libs,compile,jar" description="" />

	<target name="all" depends="prep,ivy.prep,ivy.download,ivy.update_libs,compile,jar" description="" />
</project>